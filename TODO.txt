- implement the update channel message for fees and lock delta

- channel confirmation delay, also similar blockchain related events
- importing real topology (e.g. lncli describegraph)
- profiles in properties
- initial_routing_sync to query for past gossip:
https://github.com/lightning/bolts/blob/master/07-routing-gossip.md#initial-sync

lncli describegraph > graph.json

cat graph.json | grep "pub_key" | wc -l
16184
cat graph.json | grep "channel_id" | wc -l
76347

DONE
- set a proper gossip propagation policy (stop after hops? periodically broadcast from thread?)
- saving state
- deterministic random in nodes
note: warmup, but in general, starting time of bootstrap creates a race condition on which p2p message will be received
for example: node x opens a channel, announce to peers, but peers that opened the channel towwards x will be
in the list only if their channel has been opened from their side, which depend on bootstrap timing
- restart uvm network


DEBUG:

with breakpoint on server function wait(END_DATA) does not work on client
