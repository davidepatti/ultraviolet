########################################################################
#GENERAL SETTINGS

# enable special debub() logging function for further messsages
# notice: on big networks this can affect the performance
debug=false
# output log file. Be sure to check the size for excessive increase when using debug
logfile=template.log
# seed for simulation. Please notice that since thread specific random generators are used,
# this value does not guarantee determininistic behavior (e.g. replicable sims)
seed=1
########################################################################
#BOOTSTRAP SETTINGS
#Used when bootstrapping a network from scratch,e.g. instead of loading a
# pre-existing topology (e.g., lncli describegraph)

#range of initial blocks during while each node can be bootstrapped
bootstrap_duration=3
#number of nodes to be bootstrapped
bootstrap_nodes=100

###############################################################################
# You can define different node profiles to be used when generating a topology
# The format is: profile.PROFILE_NAME.ATTRIBUTE
# Each profile is chosen with a specific 0..1 probability, while the remaining nodes
# will be associated to the default profile

# The profile "default" is the only required, chosen whenever no other is selected

#range of initial onchain funding
profile.default.min_funding=10000000
profile.default.max_funding=20000000

#number of channels each node tries to open when bootstrapping
profile.default.min_channels=5
profile.default.max_channels=20

# sizes of the channels opened

profile.default.min_channel_size=1000000
profile.default.max_channel_size=5000000

##############################################################################
profile.small.prob=0.2
#range of initial onchain funding
profile.small.min_funding=100000
profile.small.max_funding=10000000

#number of channels each node tries to open when bootstrapping
profile.small.min_channels=1
profile.small.max_channels=10

# sizes of the channels opened
profile.small.min_channel_size=1000
profile.small.max_channel_size=10000000

##############################################################################
profile.medium.prob=0.5
#range of initial onchain funding
profile.medium.min_funding=10000000
profile.medium.max_funding=200000000

#number of channels each node tries to open when bootstrapping
profile.medium.min_channels=10
profile.medium.max_channels=100

# sizes of the channels opened
profile.medium.min_channel_size=1000000
profile.medium.max_channel_size=10000000
# LN settings ############################################################
to_self_delay=20
#number of confirmation to assume channel funding confirmed
minimum_depth=6

##########################################################################
#P2P SETTINGS

# how many times each messages can be forwarded
p2p_max_hops=3
# age time - number of blocks after which messages are considered old
p2p_max_age=5

# max number of p2p gossip messages processed at each p2p call
gossip_flush_size=500

# REALT-TIME settings ####################################################
# This parameters does not represent the timing in the real-world, but affect how timechain related events
# are mapped into thread simulation events. Two aspects to be considered:
# 1) While they don't directly change the behavior of the nodes, they could impact the simulation performance
# 2) They should ALWAYS be modified and considered in coherence with eath other. E.g., if you reduce the blocktime to make a "faster" sim,
# but leave the p2p period unchanged, it's like indirectly choosing of having less of the periodic p2p method calls

# blocktime (msec) used during simulation
blocktime=1000
# time (msec) related to periodic actions performed on p2p network (gossip etc..)
#"SHOULD flush outgoing gossip messages once every 60 seconds"
# according to BOLT suggestion, this should be around 1/10 of blocktime
# https://github.com/lightning/bolts/blob/master/07-routing-gossip.md#initial-sync
p2p_period=100
