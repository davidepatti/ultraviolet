########################################################################
#GENERAL SETTINGS
# The initial part of this file contains properties that are currently mandatory
# because they are hardcode into UV method.
# Advanced users could also to change their name/meaning, but then the relative source
# code should  be changed accordingly...


# enable special debub() logging function for further messsages
# notice: on big networks this can affect the performance
debug=false

# output log file. Be sure to check the size for excessive increase when using debug
logfile=paper1000.log

# seed for simulation. Please notice that since thread specific random generators are used,
# this value does not guarantee determininistic behavior (e.g. replicable sims)
seed=1

#BOOTSTRAP SETTINGS #####################################################
#Used when bootstrapping a network from scratch,e.g. instead of loading a pre-existing topology

#range of initial blocks during while each node can be bootstrapped
bootstrap_duration=100

#number of nodes to be bootstrapped
bootstrap_nodes=1000

# Adavanced LN settings ############################################################
to_self_delay=20

#number of confirmation to assume channel funding confirmed
minimum_depth=6

# P2P SETTINGS ####################################################################

# how many times each messages can be forwarded
p2p_max_hops=3
# age time - number of blocks after which messages are considered old
p2p_max_age=5

# max number of p2p gossip messages processed at each p2p call
gossip_flush_size=500

# REALT-TIME settings ####################################################
# This parameters does not represent the timing in the real-world, but affect how timechain related events
# are mapped into thread simulation events.
# Two aspects to be considered:
# 1) While they don't directly change the behavior of the nodes, they could impact the simulation performance
# 2) They should ALWAYS be modified and considered in coherence with eath other. E.g., if you reduce the blocktime to make a "faster" sim,
# but leave the p2p period unchanged, it's like indirectly choosing of having less of the periodic p2p method calls

# blocktime (msec) used during simulation
blocktime=100
# time (msec) related to periodic actions performed on p2p network (gossip etc..)
#"SHOULD flush outgoing gossip messages once every 60 seconds"
# according to BOLT suggestion, this should be around 1/10 of blocktime
# https://github.com/lightning/bolts/blob/master/07-routing-gossip.md#initial-sync
p2p_period=10

# CUSTOM NODE PROFILES #########################################################
# You can define different node profiles to be used when generating a topology
# The format is: profile.PROFILE_NAME.ATTRIBUTE
# Each profile is chosen with a specific 0..1 probability, while the remaining nodes
# will be associated to the default profile

# The profile "default" is the only required, chosen whenever no other is selected

##############################################################################
profile.small.prob=0.6
#range of initial onchain funding
profile.small.min_funding=100000
profile.small.max_funding=10000000

#number of channels each node tries to open when bootstrapping
profile.small.min_channels=1
profile.small.max_channels=10

# sizes of the channels opened
profile.small.min_channel_size=1000
profile.small.max_channel_size=10000000

##############################################################################
profile.medium.prob=0.3
#range of initial onchain funding
profile.medium.min_funding=10000000
profile.medium.max_funding=200000000

#number of channels each node tries to open when bootstrapping
profile.medium.min_channels=10
profile.medium.max_channels=100

# sizes of the channels opened
profile.medium.min_channel_size=1000000
profile.medium.max_channel_size=10000000

##############################################################################
profile.hub.prob=0.1
#range of initial onchain funding
profile.hub.min_funding=200000000
profile.hub.max_funding=500000000

#number of channels each node tries to open when bootstrapping
profile.hub.min_channels=100
profile.hub.max_channels=500

# sizes of the channels opened
profile.hub.min_channel_size=10000000
profile.hub.max_channel_size=100000000

#############################################################################
# Default profile is used to cover the remaining probability not allocated to profiles
#range of initial onchain funding
profile.default.min_funding=10000000
profile.default.max_funding=20000000

#number of channels each node tries to open when bootstrapping
profile.default.min_channels=5
profile.default.max_channels=20

# sizes of the channels opened

profile.default.min_channel_size=1000000
profile.default.max_channel_size=5000000

## Custom attributes

# Fees - specified as a set of typical value that can be used in nodes.
# useful if you want just to choose some random value without having an excessively fine granularity of values
# e.g., it might not have sense to differentiate nodes with similar fees as 400, 398, 403, 407
base_fee_set = 0,100,1000
ppm_fee_set = 0,10,50,100,200,500,1000
